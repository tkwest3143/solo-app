name: 🔧 リファクタリング (Claude Code対応)
description: Claude Codeでの明確なスコープとガイドラインによるコードリファクタリング要求
title: "[リファクタリング]: "
labels: ["refactoring", "claude-code", "technical-debt"]
body:
  - type: markdown
    attributes:
      value: |
        ## Claude Code リファクタリングテンプレート
        
        このテンプレートはClaude Codeでのコードリファクタリングタスクに最適化されています。
        安全で効果的なリファクタリングを確実にするため、明確なスコープとガイドラインを提供してください。

  - type: textarea
    id: refactoring-goal
    attributes:
      label: リファクタリングの目標
      description: このリファクタリングで何を達成したいですか？
      placeholder: "CLAUDE.mdガイドラインに従って、すべてのStatefulWidgetコンポーネントをHookConsumerWidgetに変換する..."
    validations:
      required: true

  - type: textarea
    id: current-problems
    attributes:
      label: 現在の問題/課題
      description: 現在のコードにはどのような問題がありますか？
      placeholder: |
        - CLAUDE.mdガイドラインに違反している
        - 保守/テストが困難
        - パフォーマンスの問題
        - コードの重複
        - 関心事の分離が不十分
      value: |
        - 
        - 
        - 
    validations:
      required: true

  - type: textarea
    id: scope
    attributes:
      label: リファクタリングの範囲
      description: 何をリファクタリングすべきか、何をすべきでないかを明確に定義してください
      placeholder: |
        **含める：**
        - lib/screen/widgets/timer/ ディレクトリ
        - すべてのタイマー関連の状態管理
        - タイマーコンポーネントのデータベースアクセスパターン
        
        **除外する：**
        - 認証ロジック
        - データベーススキーマの変更
        - サードパーティとの統合
      value: |
        **含める：**
        - 
        - 
        - 
        
        **除外する：**
        - 
        - 
        - 
    validations:
      required: true

  - type: textarea
    id: target-files
    attributes:
      label: 対象ファイル/コンポーネント
      description: リファクタリングが必要な具体的なファイルやコンポーネントをリストアップ
      placeholder: |
        - lib/screen/widgets/timer/timer_main_widget.dart
        - lib/screen/widgets/timer/timer_settings_widget.dart
        - lib/screen/states/timer_state.dart
        - lib/services/timer_service.dart
      value: |
        - 
        - 
        - 
        - 

  - type: textarea
    id: refactoring-guidelines
    attributes:
      label: リファクタリングガイドライン
      description: 従うべき具体的なルールとパターン
      placeholder: |
        - CLAUDE.mdコーディング標準に従う
        - StatefulWidgetの代わりにHookConsumerWidgetを使用
        - 適切なエラーハンドリングを実装
        - 後方互換性を維持
        - 既存のパブリックAPIを保持
        - 適切なドキュメントを追加
      value: |
        - CLAUDE.mdコーディング標準に従う
        - 
        - 
        - 
    validations:
      required: true

  - type: textarea
    id: constraints
    attributes:
      label: 制約と要件
      description: 尊重すべき制限や要件は何ですか？
      placeholder: |
        - 既存の機能を壊してはいけない
        - データベース互換性を維持する必要がある
        - パブリックAPIシグネチャを変更できない
        - すべての既存テストが通る必要がある
        - パフォーマンスを悪化させてはいけない

  - type: dropdown
    id: risk-level
    attributes:
      label: リスクレベル
      description: このリファクタリングはどの程度リスキーですか？
      options:
        - 低 (分離された変更、簡単に元に戻せる)
        - 中 (複数のコンポーネント、やや複雑)
        - 高 (コアな変更、大きな影響)
        - 致命的 (主要なアーキテクチャ変更)
    validations:
      required: true

  - type: textarea
    id: success-criteria
    attributes:
      label: 成功基準
      description: リファクタリングが成功したとどのように判断しますか？
      placeholder: |
        - [ ] すべてのコードがCLAUDE.mdガイドラインに従っている
        - [ ] 対象ファイルでStatefulWidgetの使用がない
        - [ ] すべての既存機能が以前と同様に動作する
        - [ ] コードがより保守しやすく/読みやすくなっている
        - [ ] すべてのテストが通る
        - [ ] パフォーマンスの回帰がない
      value: |
        - [ ] 
        - [ ] 
        - [ ] 
        - [ ] 
    validations:
      required: true

  - type: textarea
    id: testing-strategy
    attributes:
      label: テスト戦略
      description: リファクタリング後のコードをどのようにテストすべきですか？
      placeholder: |
        - 既存のユニットテストを実行
        - タイマー機能の手動テスト
        - パフォーマンスベンチマーク
        - 他のコンポーネントとの統合テスト
        - 重要なユーザーフローの回帰テスト

  - type: textarea
    id: rollback-plan
    attributes:
      label: ロールバック計画
      description: リファクタリングがうまくいかなかった場合の計画は何ですか？
      placeholder: |
        - 安全なリファクタリングのためのGitブランチ
        - 簡単に元に戻すための特定のコミットポイント
        - 重要なファイルのバックアップ
        - リファクタリング中のテストチェックポイント

  - type: dropdown
    id: priority
    attributes:
      label: 優先度
      description: このリファクタリングはどの程度緊急ですか？
      options:
        - 致命的 (他の作業をブロック)
        - 高 (コード品質にとって重要)
        - 中 (技術的負債のクリーンアップ)
        - 低 (あると良い改善)
    validations:
      required: true

  - type: textarea
    id: additional-context
    attributes:
      label: 追加情報
      description: その他の関連情報
      placeholder: |
        - 関連するissueやPR
        - 履歴的背景
        - チームでの議論
        - 外部依存関係

  - type: checkboxes
    id: claude-code-checklist
    attributes:
      label: Claude Code リファクタリングチェックリスト
      description: Claude Codeでの効果的なリファクタリングを確実にする
      options:
        - label: リファクタリングの範囲を明確に定義しました
        - label: 変更が必要な具体的なファイルを特定しました
        - label: 明確なガイドラインと制約を提供しました
        - label: リスクレベルを理解し、ロールバック計画があります
        - label: リファクタリング後のコードをテストできます
        - label: リファクタリング中に要件の明確化を提供できます
        - label: 他のチームメンバーへの影響を考慮しました