// Temporary stub file for settings_model.g.dart
// This file should be generated by build_runner

import 'package:solo/models/settings_model.dart';
import 'package:flutter/material.dart';

AppSettings _$AppSettingsFromJson(Map<String, dynamic> json) {
  return AppSettings(
    themeMode: ThemeMode.values.firstWhere(
      (e) => e.toString() == 'ThemeMode.${json['themeMode']}',
      orElse: () => ThemeMode.system,
    ),
    defaultWorkMinutes: json['defaultWorkMinutes'] as int? ?? 25,
    defaultShortBreakMinutes: json['defaultShortBreakMinutes'] as int? ?? 5,
    defaultLongBreakMinutes: json['defaultLongBreakMinutes'] as int? ?? 15,
    defaultCyclesUntilLongBreak: json['defaultCyclesUntilLongBreak'] as int? ?? 4,
    todoDueDateNotificationsEnabled: json['todoDueDateNotificationsEnabled'] as bool? ?? false,
    pomodoroCompletionNotificationsEnabled: json['pomodoroCompletionNotificationsEnabled'] as bool? ?? false,
    countUpTimerNotificationsEnabled: json['countUpTimerNotificationsEnabled'] as bool? ?? false,
    todoDeadlineRemindersEnabled: json['todoDeadlineRemindersEnabled'] as bool? ?? true,
    appUpdateNotificationsEnabled: json['appUpdateNotificationsEnabled'] as bool? ?? true,
    countUpNotificationMinutes: json['countUpNotificationMinutes'] as int? ?? 60,
  );
}

Map<String, dynamic> _$AppSettingsToJson(AppSettings instance) => {
  'themeMode': instance.themeMode.toString().split('.').last,
  'defaultWorkMinutes': instance.defaultWorkMinutes,
  'defaultShortBreakMinutes': instance.defaultShortBreakMinutes,
  'defaultLongBreakMinutes': instance.defaultLongBreakMinutes,
  'defaultCyclesUntilLongBreak': instance.defaultCyclesUntilLongBreak,
  'todoDueDateNotificationsEnabled': instance.todoDueDateNotificationsEnabled,
  'pomodoroCompletionNotificationsEnabled': instance.pomodoroCompletionNotificationsEnabled,
  'countUpTimerNotificationsEnabled': instance.countUpTimerNotificationsEnabled,
  'todoDeadlineRemindersEnabled': instance.todoDeadlineRemindersEnabled,
  'appUpdateNotificationsEnabled': instance.appUpdateNotificationsEnabled,
  'countUpNotificationMinutes': instance.countUpNotificationMinutes,
};